{"id":"../node_modules/html-dom-parser/lib/client/html-to-dom.js","dependencies":[{"name":"/home/klas/booking/package.json","includedInParent":true,"mtime":1611168021664},{"name":"/home/klas/booking/node_modules/html-dom-parser/package.json","includedInParent":true,"mtime":1611088590537},{"name":"./domparser","loc":{"line":1,"column":24},"parent":"/home/klas/booking/node_modules/html-dom-parser/lib/client/html-to-dom.js","resolved":"/home/klas/booking/node_modules/html-dom-parser/lib/client/domparser.js"},{"name":"./utilities","loc":{"line":2,"column":24},"parent":"/home/klas/booking/node_modules/html-dom-parser/lib/client/html-to-dom.js","resolved":"/home/klas/booking/node_modules/html-dom-parser/lib/client/utilities.js"}],"generated":{"js":"var domparser = require('./domparser');\nvar formatDOM = require('./utilities').formatDOM;\n\nvar DIRECTIVE_REGEX = /<(![a-zA-Z\\s]+)>/; // e.g., <!doctype html>\n\n/**\n * Parses HTML string to DOM nodes in browser.\n *\n * @param  {string} html  - HTML markup.\n * @return {DomElement[]} - DOM elements.\n */\nfunction HTMLDOMParser(html) {\n  if (typeof html !== 'string') {\n    throw new TypeError('First argument must be a string');\n  }\n\n  if (html === '') {\n    return [];\n  }\n\n  // match directive\n  var match = html.match(DIRECTIVE_REGEX);\n  var directive;\n\n  if (match && match[1]) {\n    directive = match[1];\n  }\n\n  return formatDOM(domparser(html), null, directive);\n}\n\nmodule.exports = HTMLDOMParser;\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/html-dom-parser/lib/client/html-to-dom.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/html-dom-parser/lib/client/html-to-dom.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/html-dom-parser/lib/client/html-to-dom.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/html-dom-parser/lib/client/html-to-dom.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/html-dom-parser/lib/client/html-to-dom.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/html-dom-parser/lib/client/html-to-dom.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/html-dom-parser/lib/client/html-to-dom.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/html-dom-parser/lib/client/html-to-dom.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/html-dom-parser/lib/client/html-to-dom.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/html-dom-parser/lib/client/html-to-dom.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/html-dom-parser/lib/client/html-to-dom.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/html-dom-parser/lib/client/html-to-dom.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/html-dom-parser/lib/client/html-to-dom.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/html-dom-parser/lib/client/html-to-dom.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/html-dom-parser/lib/client/html-to-dom.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/html-dom-parser/lib/client/html-to-dom.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/html-dom-parser/lib/client/html-to-dom.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/html-dom-parser/lib/client/html-to-dom.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/html-dom-parser/lib/client/html-to-dom.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/html-dom-parser/lib/client/html-to-dom.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/html-dom-parser/lib/client/html-to-dom.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/html-dom-parser/lib/client/html-to-dom.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/html-dom-parser/lib/client/html-to-dom.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/html-dom-parser/lib/client/html-to-dom.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/html-dom-parser/lib/client/html-to-dom.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/html-dom-parser/lib/client/html-to-dom.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/html-dom-parser/lib/client/html-to-dom.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/html-dom-parser/lib/client/html-to-dom.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/html-dom-parser/lib/client/html-to-dom.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/html-dom-parser/lib/client/html-to-dom.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/html-dom-parser/lib/client/html-to-dom.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/html-dom-parser/lib/client/html-to-dom.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/html-dom-parser/lib/client/html-to-dom.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}}],"sources":{"../node_modules/html-dom-parser/lib/client/html-to-dom.js":"var domparser = require('./domparser');\nvar formatDOM = require('./utilities').formatDOM;\n\nvar DIRECTIVE_REGEX = /<(![a-zA-Z\\s]+)>/; // e.g., <!doctype html>\n\n/**\n * Parses HTML string to DOM nodes in browser.\n *\n * @param  {string} html  - HTML markup.\n * @return {DomElement[]} - DOM elements.\n */\nfunction HTMLDOMParser(html) {\n  if (typeof html !== 'string') {\n    throw new TypeError('First argument must be a string');\n  }\n\n  if (html === '') {\n    return [];\n  }\n\n  // match directive\n  var match = html.match(DIRECTIVE_REGEX);\n  var directive;\n\n  if (match && match[1]) {\n    directive = match[1];\n  }\n\n  return formatDOM(domparser(html), null, directive);\n}\n\nmodule.exports = HTMLDOMParser;\n"},"lineCount":33}},"error":null,"hash":"d50878048e74af1eccf279e3d94693e4","cacheData":{"env":{}}}